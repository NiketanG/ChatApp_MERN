{"version":3,"sources":["serviceWorker.js","reducers/session.js","reducers/messages.js","reducers/index.js","actions/index.js","Socket.js","Home/Login/index.js","Home/SignUp/index.js","Home/index.js","Chat/Components/ChatList/ChatBar/index.js","Chat/Components/ChatList/User/index.js","Chat/Components/ChatList/index.js","Chat/Components/ChatWindow/TitleBar/index.js","Chat/Components/ChatWindow/index.js","Chat/index.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","currentUser","sessionReducer","state","action","type","localStorage","setItem","payload","token","username","removeItem","messages","messagesReducer","rootReducer","combineReducers","session","loginUser","user","addMessage","message","socket","socketIOClient","connect","socketAuth","io","opts","transportOptions","polling","extraHeaders","getItem","disconnect","open","Alert","props","elevation","variant","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","progress","marginRight","marginBottom","SignIn","useState","setUsername","password","setPassword","rememberMe","setrememberMe","isLoggingIn","setisLogginIn","isLoggedIn","setisLoggedIn","isValidUser","setisValidUser","classes","dispatch","useDispatch","Container","component","maxWidth","CssBaseline","className","Avatar","Snackbar","autoHideDuration","anchorOrigin","severity","to","method","onSubmit","ev","preventDefault","axios","post","then","res","status","data","catch","err","console","log","response","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","FormControlLabel","checked","control","Checkbox","Button","CircularProgress","size","thickness","Grid","container","item","xs","Box","mt","width","SignUp","setName","email","setEmail","isSigningUp","setisSigningUp","signedUp","setsignedUp","error","seterror","justify","Home","setIsLoggedIn","useEffect","get","headers","titleBar","left","breakpoints","down","title","flexGrow","ChatBar","logout","AppBar","position","Toolbar","onClick","divider","orange","getContrastText","deepOrange","purple","deepPurple","User","handleListItemClick","ListItem","button","ListItemIcon","alt","toUpperCase","charAt","ListItemText","primary","Divider","root","borderRight","border","searchContainer","usersContainer","padding","toolbar","mixins","ChatList","recents","selectChat","query","setQuery","users","setUsers","SearchResults","setSearchResults","index","appbar","val","length","map","el","List","aria-label","key","closeChat","IconButton","edge","menuButton","ArrowBack","height","alignSelf","sendMessageContainer","boxSizing","sendField","sendButton","borderRadius","messageContainer","overflowY","sender","time","messageText","messageBox","overflowX","ownMessageBox","imageContainer","image","backdrop","zIndex","drawer","viewImage","maxHeight","Message","useSelector","toLocaleString","Image","imageURL","openImage","setOpenImage","src","handleClose","ViewImage","Backdrop","ChatWindow","messageStore","setOnline","setMessage","setIsTyping","messageList","setMessageList","sendImage","useRef","tempMsg","sort","a","b","add_Message","filter","obj","from","online","on","oldArray","sendMessage","msg","toISOString","emit","TitleBar","e","onKeyPress","which","current","click","accept","ref","style","event","stopPropagation","file","files","formData","FormData","append","secure_url","imageSelected","fontSize","Icon","content","NoChatSelected","justifyContent","textAlign","NoChatSelectedText","Chat","chatSelected","setChatSelected","setRecents","loggedIn","some","userList","reverse","forEach","find","push","Hidden","xsDown","chatList","history","createBrowserHistory","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","Main","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.085bd6eb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    currentUser: {}\n}\n\nconst sessionReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOGIN_USER':\n            localStorage.setItem('token', action.payload.token);\n            localStorage.setItem('currentUser', action.payload.username);\n            return { ...state, currentUser: action.payload };\n        case 'LOGOUT_USER':\n            localStorage.removeItem('token');\n            localStorage.removeItem('currentUser');\n            return initialState;\n        default:\n            return state\n    }\n}\n\nexport default sessionReducer;","const initialState = {\n    messages: [],\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_MESSAGE':\n            return { ...state, messages: [...state.messages, action.payload] };\n        case 'CLEAR_MESSAGES':\n            return { ...state, messages: [] }\n        default:\n            return state\n    }\n}\n\nexport default messagesReducer;","import sessionReducer from './session';\nimport messagesReducer from './messages';\n\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n    messages: messagesReducer\n});\n\nexport default rootReducer;\n\n","const loginUser = user => ({\n    type: 'LOGIN_USER',\n    payload: user\n});\n\nconst logoutUser = () => ({\n    type: 'LOGOUT_USER',\n});\n\nconst addMessage = message => ({\n    type: 'ADD_MESSAGE',\n    payload: message\n});\n\nconst clearMessages = () => ({\n    type: 'CLEAR_MESSAGES'\n});\n\nexport { loginUser, logoutUser, addMessage, clearMessages };\n","import socketIOClient from \"socket.io-client\";\n\nconst socket = socketIOClient.connect('/');\n\n// const socket = socketIOClient({\n//     transportOptions: {\n//         polling: {\n//             extraHeaders: {\n//                 'auth-token': localStorage.getItem('token')\n//             }\n//         }\n//     }\n// }).connect('/')\n\nconst socketAuth = () => {\n    socket.io.opts.transportOptions = {\n        polling: {\n            extraHeaders: {\n                'auth-token': localStorage.getItem('token')\n            },\n        },\n    };\n    socket.disconnect();\n    socket.open();\n}\n\nexport { socket, socketAuth }","import React, { useState } from 'react';\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Grid, Box, Typography, Container, Link, CircularProgress, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../../actions';\n\nimport { socket, socketAuth } from '../../Socket';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://bit.ly/nikketan\">\n                Nikketan Gulekar\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    progress: {\n        marginRight: theme.spacing(2),\n        marginBottom: '-2px'\n    }\n}));\n\nconst SignIn = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setrememberMe] = useState(false);\n    const [isLoggingIn, setisLogginIn] = useState(false);\n    const [isLoggedIn, setisLoggedIn] = useState(false);\n    const [isValidUser, setisValidUser] = useState(true);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const signIn = (ev) => {\n        setisLogginIn(true);\n        axios.post('/api/user/login', { username: username, password: password })\n            .then(res => {\n                if (res.status === 200) {\n                    localStorage.setItem(\"token\", res.data.token);\n                    localStorage.setItem(\"currentUser\", res.data.username);\n                    dispatch(loginUser(res.data));\n                    setisValidUser(true);\n                    setisLoggedIn(true);\n                    socketAuth();\n                }\n            }).catch((err) => {\n                console.log(err)\n                if (err.response) {\n                    if (err.response.status === 401) {\n                        setisValidUser(false);\n                    }\n                }\n            });\n        setisLogginIn(false);\n    };\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Snackbar\n                    open={isLoggedIn}\n                    autoHideDuration={6000}\n                    anchorOrigin={{ \"vertical\": \"bottom\", \"horizontal\": \"center\" }}\n                >\n                    <Alert severity=\"success\">\n                        Signed In !\n                    </Alert>\n                </Snackbar>\n                {isLoggedIn ? <Redirect to=\"/Chat\" /> : null}\n\n                <Snackbar\n                    open={!isValidUser}\n                    autoHideDuration={6000}\n                    anchorOrigin={{ \"vertical\": \"bottom\", \"horizontal\": \"center\" }}\n                >\n                    <Alert severity=\"error\">\n                        Incorrect Username or Password\n                    </Alert>\n                </Snackbar>\n\n                <Typography component=\"h1\" variant=\"h5\">Sign In</Typography>\n\n                <form className={classes.form} method=\"post\" onSubmit={(ev) => { ev.preventDefault(); signIn(); }}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required fullWidth\n                        id=\"username\"\n                        label=\"Username or Email\"\n                        name=\"username\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={username}\n                        onChange={(ev) => setUsername(ev.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={(ev) => setPassword(ev.target.value)}\n                    />\n                    <FormControlLabel\n                        checked={rememberMe}\n                        control=\n                        {<Checkbox\n\n                            color=\"primary\" />}\n                        label=\"Remember Me\"\n                        onChange={(ev) => setrememberMe(ev.target.checked)}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n\n\n                        {\n                            isLoggingIn ? <span>< CircularProgress color=\"inherit\" size=\"1rem\" thickness={5} className={classes.progress} />Signing In</span> : 'Sign In'\n                        }\n                    </Button>\n\n                    <Grid container>\n                        <Grid item xs>\n                            {/* <Link href=\"\" variant=\"body2\">Forgot Password?</Link> */}\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">{\"Don't have an account? Sign Up\"}</Link>\n                        </Grid>\n                    </Grid>\n                </form>\n\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n\n        </Container >\n    );\n}\n\nexport default SignIn;","import React, { useState } from 'react';\nimport { Avatar, Button, CssBaseline, TextField, Grid, Box, Typography, Container, Link, CircularProgress, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    progress: {\n        marginRight: theme.spacing(2),\n        marginBottom: '-2px'\n    }\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    //const [confirmPassword, setConfirmPassword] = useState('');\n    const [isSigningUp, setisSigningUp] = useState(false);\n    const [signedUp, setsignedUp] = useState(false)\n    const [error, seterror] = useState('');\n\n    const signUp = (ev) => {\n        setisSigningUp(true);\n        axios.post('/api/user/register', { email: email, name: name, username: username, password: password })\n            .then(res => {\n                if (res.status === 200) {\n                    setsignedUp(true);\n                }\n            }).catch((err) => {\n                if (err.response) {\n                    if (err.response.status === 401) {\n                        seterror(err.response.data);\n                        setsignedUp(false);\n                    }\n                    console.log(err.response.data)\n                }\n            });\n        setisSigningUp(false);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n\n                <Snackbar\n                    open={signedUp}\n                    autoHideDuration={6000}\n                    anchorOrigin={{ \"vertical\": \"bottom\", \"horizontal\": \"center\" }}\n                >\n                    <Alert severity=\"success\">\n                        Signed Up !\n                    </Alert>\n                </Snackbar>\n\n                {signedUp ? <Redirect to=\"/Login\" /> : null}\n                <Snackbar\n                    open={error === '' ? false : true}\n                    autoHideDuration={6000}\n                    anchorOrigin={{ \"vertical\": \"bottom\", \"horizontal\": \"center\" }}\n                >\n                    <Alert severity=\"error\">\n                        {error}\n                    </Alert>\n                </Snackbar>\n                <form className={classes.form} method=\"post\" onSubmit={(ev) => { ev.preventDefault(); signUp(); }}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"name\"\n                                name=\"name\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Name\"\n                                autoFocus\n                                value={name}\n                                onChange={(ev) => setName(ev.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"username\"\n                                name=\"username\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                value={username}\n                                onChange={(ev) => setUsername(ev.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                type=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value={email}\n                                onChange={(ev) => setEmail(ev.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={password}\n                                onChange={(ev) => setPassword(ev.target.value)}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        {\n                            isSigningUp ? <span>< CircularProgress color=\"inherit\" size=\"1rem\" thickness={5} className={classes.progress} />Signing Up</span> : 'Sign Up'\n                        }\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                Already have an account? Sign in\n                                </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container >\n    );\n}\nexport default SignUp;","import React, { useEffect, useState } from \"react\";\nimport SignIn from './Login';\nimport { loginUser } from '../actions';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst Home = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token !== null) {\n      axios.get('/api/user/account', { headers: { \"auth-token\": token } })\n        .then(res => {\n          if (res.status === 200) {\n            setIsLoggedIn(true);\n            dispatch(loginUser({ ...res.data, 'token': token }));\n          }\n        }).catch((err) => {\n          if (err.response) {\n            console.log(err.response)\n            setIsLoggedIn(false);\n          }\n        });\n    }\n  }, []);\n\n\n  return (\n    <div>\n      {isLoggedIn ? <Redirect to=\"/Chat\" /> : null}\n      <SignIn />\n    </div>\n  )\n}\n\nexport default Home;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n    titleBar: {\n        left: '0',\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n        },\n        width: '360px',\n\n    },\n    title: {\n        flexGrow: 1\n    }\n}));\n\nconst ChatBar = ({ logout }) => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" className={classes.titleBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Chat\n                    </Typography>\n                    <Button color=\"inherit\" onClick={logout}>Log out</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default ChatBar;\n","import React from \"react\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\n    divider: {\n        margin: theme.spacing(1)\n    },\n\n    orange: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: deepOrange[500]\n    },\n    purple: {\n        color: theme.palette.getContrastText(deepPurple[500]),\n        backgroundColor: deepPurple[500]\n    }\n}));\nconst User = ({ user, handleListItemClick }) => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <ListItem button onClick={() => handleListItemClick(user)}>\n                <ListItemIcon>\n                    <Avatar className={classes.purple} alt={user.toUpperCase()}>{user.charAt(0).toUpperCase()}</Avatar>\n                </ListItemIcon>\n                <ListItemText primary={user} />\n            </ListItem>\n            <Divider className={classes.divider} />\n        </div>\n    );\n};\n\nexport default User;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser, clearMessages } from '../../../actions';\n\nimport TextField from \"@material-ui/core/TextField\";\nimport List from '@material-ui/core/List';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport axios from 'axios';\n\nimport { socket, socketAuth } from '../../../Socket';\nimport ChatBar from \"./ChatBar\";\nimport User from \"./User\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        borderRight: '0.5px solid rgba(0,0,0,0.3)',\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n            border: 'none'\n        },\n        width: '360px',\n        height: '100vh',\n        overflowY: 'auto',\n\n    },\n    searchContainer: {\n        margin: theme.spacing(1),\n    },\n    usersContainer: {\n        padding: theme.spacing(1)\n    },\n    toolbar: theme.mixins.toolbar\n}));\n\nconst ChatList = ({ recents, selectChat }) => {\n    const classes = useStyles();\n    const token = localStorage.getItem('token');\n    const dispatch = useDispatch();\n    const [query, setQuery] = useState('');\n    const [users, setUsers] = useState([]);\n    const [SearchResults, setSearchResults] = useState([]);\n    const [loggedIn, setIsLoggedIn] = useState(true);\n\n    useEffect(() => {\n        setUsers(recents)\n    }, [recents]);\n\n    const handleListItemClick = (index) => {\n        selectChat(index);\n        setQuery(\"\");\n        setSearchResults([])\n    };\n\n    const logout = () => {\n        dispatch(logoutUser());\n        dispatch(clearMessages());\n        socket.disconnect();\n        setIsLoggedIn(false);\n    };\n\n    const search = (val) => {\n        setQuery(val);\n        if (val.length === 0) {\n            setSearchResults([]);\n        } else {\n            axios.post('/api/user/search', { \"query\": val }, { headers: { \"auth-token\": token } }).then(res => {\n                setSearchResults(res.data.map(el => (el.username)))\n\n            }).catch((err) => {\n                if (err.response) {\n                    console.log(err.response)\n                }\n            });\n        }\n    }\n    return (\n        <div className={classes.root}>\n            <ChatBar className={classes.appbar} logout={logout} />\n            <div className={classes.toolbar} />\n            <div className={classes.searchContainer}>\n                <TextField\n                    fullWidth\n                    id=\"search-box\"\n                    label=\"Search\"\n                    variant=\"outlined\"\n                    value={query} onChange={(ev) => search(ev.target.value)}\n                />\n            </div>\n            <div className={classes.usersContainer}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    {SearchResults.map(user => {\n                        return (\n                            <User user={user} handleListItemClick={handleListItemClick} key={user} />\n                        );\n                    })}\n                    {SearchResults.length > 0 ? null :\n                        (\n                            users.map(user => {\n                                return (\n                                    <User user={user.user} handleListItemClick={handleListItemClick} key={user.user} />\n                                );\n                            })\n                        )\n                    }\n                </List>\n            </div>\n        </div>\n    );\n};\nexport default ChatList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { ArrowBack } from \"@material-ui/icons\";\n\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles(theme => ({\n    titleBar: {\n        [theme.breakpoints.down('xs')]: {\n            width: '100vw'\n        },\n        width: 'calc(100vw - 360px)'\n    },\n    orange: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: deepOrange[500]\n    },\n    purple: {\n        color: theme.palette.getContrastText(deepPurple[500]),\n        backgroundColor: deepPurple[500]\n    }\n}));\n\nconst ChatBar = ({ name, username, closeChat }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.titleBar}>\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        onClick={closeChat}\n                    >\n                        <ArrowBack />\n                    </IconButton>\n                    <IconButton edge=\"start\" className={classes.menuButton}>\n                        <Avatar className={classes.orange} alt={name} >{name.charAt(0)}</Avatar>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {name}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default ChatBar;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport axios from 'axios';\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport TitleBar from \"./TitleBar\";\nimport { socket, socketAuth } from '../../../Socket';\nimport { addMessage } from '../../../actions';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n    },\n    titleBar: {\n\n        alignSelf: 'flex-start',\n    },\n    sendMessageContainer: {\n        alignSelf: 'flex-end',\n        display: \"flex\",\n        backgroundColor: \"snow\",\n        padding: theme.spacing(2, 2, 6, 2),\n        boxSizing: \"border-box\",\n        [theme.breakpoints.down('xs')]: {\n            width: '100vw'\n        },\n        width: \"100%\",\n        height: \"40px\",\n    },\n    sendField: {\n        marginRight: theme.spacing(1),\n        flexGrow: 1,\n\n    },\n    sendButton: {\n        borderRadius: \"20px\",\n        height: \"40px\",\n        width: \"40px\"\n    },\n    toolbar: theme.mixins.toolbar,\n    messageContainer: {\n        width: \"100%\",\n        padding: theme.spacing(2),\n        overflowY: 'auto',\n        flexGrow: 1\n    },\n    message: {\n        width: \"100%\",\n        display: \"block\"\n    },\n    sender: {\n        margin: theme.spacing(0.5, 0)\n    },\n    time: {\n        margin: theme.spacing(0.5, 0)\n    },\n    messageText: {\n        backgroundColor: \"rgba(0,0,0,0.1)\",\n        padding: theme.spacing(1, 2),\n        borderRadius: \"20px\"\n    },\n    messageBox: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        maxWidth: \"100%\",\n        overflowX: \"auto\"\n    },\n    ownMessageBox: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-end\",\n        maxWidth: \"100%\",\n        overflowX: \"auto\"\n    },\n    imageContainer: {\n        width: \"250px\",\n        margin: theme.spacing(2),\n    },\n    image: {\n        borderRadius: \"10px\",\n        maxWidth: \"250px\",\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    viewImage: {\n        maxWidth: '90vw',\n        maxHeight: '90vh'\n    }\n}));\n\nconst Message = ({ sender, message, time }) => {\n    const currentUser = useSelector(state => state.session.currentUser.username);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.message}>\n            <div className={sender === currentUser ? (classes.ownMessageBox) : (classes.messageBox)}>\n                <Typography color=\"textSecondary\" variant=\"body2\" className={classes.sender}>{sender === currentUser ? \"You\" : sender}</Typography>\n                <Typography className={classes.messageText}>{message}</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" className={classes.time}>{new Date(time).toLocaleString()}</Typography>\n            </div>\n        </div>\n    );\n};\n\nconst Image = ({ sender, imageURL, time }) => {\n    const currentUser = useSelector(state => state.session.currentUser.username);\n    const [openImage, setOpenImage] = useState(false)\n    const handleImageClose = (state) => {\n        setOpenImage(state);\n    };\n    const classes = useStyles();\n    return (\n        <div className={classes.message}>\n            <div className={sender === currentUser ? (classes.ownMessageBox) : (classes.messageBox)}>\n                <Typography color=\"textSecondary\" variant=\"body2\" className={classes.sender}>{sender === currentUser ? \"You\" : sender}</Typography>\n                <div className={classes.imageContainer}>\n\n                    <img\n                        className={classes.image}\n                        src={imageURL}\n                        alt={`Image sent by ${sender}`}\n                        onClick={() => setOpenImage(true)}\n                    />\n                </div>\n                <Typography variant=\"body2\" color=\"textSecondary\" className={classes.time}>{new Date(time).toLocaleString()}</Typography>\n                {openImage ?\n                    <ViewImage imageURL={imageURL} handleClose={handleImageClose} /> : null}\n            </div>\n        </div>\n    );\n};\n\nconst ViewImage = ({ imageURL, handleClose }) => {\n    const classes = useStyles();\n    const handleImageClose = () => {\n        handleClose(false);\n    };\n    return (\n        <div>\n            <Backdrop className={classes.backdrop} open={true} onClick={handleImageClose}>\n                <img src={imageURL} className={classes.viewImage} />\n            </Backdrop>\n        </div>\n\n    )\n}\nconst ChatWindow = ({ username, closeChat }) => {\n    const classes = useStyles();\n\n    const token = localStorage.getItem('token')\n    const currentUser = useSelector(state => state.session.currentUser.username);\n    const messageStore = useSelector(state => state.messages.messages);\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState(username);\n    const [online, setOnline] = useState(false);\n    const [message, setMessage] = useState('');\n    const [IsTyping, setIsTyping] = useState(false);\n    const [messageList, setMessageList] = useState([]);\n    const sendImage = useRef(null);\n    const [selectedImage, setSelectedImage] = useState(null);\n\n    useEffect(() => {\n        if (messageStore.length !== 0) {\n            var tempMsg = messageStore.sort(function (a, b) { return new Date(a.time) - new Date(b.time) });\n            add_Message(tempMsg.filter(obj => (obj.from === username && obj.to === currentUser) || (obj.to === username && obj.from === currentUser)));\n        }\n\n        axios.post('/api/user/get', { \"username\": username }).then(res => {\n            setOnline(res.data.online);\n            setName(res.data.name);\n        });\n\n        socket.on('TYPING', data => {\n            setIsTyping(true)\n        });\n        socket.on('STOPPED_TYPING', data => {\n            setIsTyping(false)\n        });\n\n    }, [username, messageStore]);\n\n    const add_Message = (data) => {\n        setMessageList(oldArray => data);\n    };\n\n    const sendMessage = () => {\n        if (message.length > 0) {\n            const msg = { \"to\": username, \"from\": currentUser, \"message\": message, \"time\": new Date().toISOString() }\n            dispatch(addMessage(msg));\n            socket.emit('SEND_MESSAGE', msg);\n            setMessage('')\n        }\n    };\n\n    const checkKeyPress = (e) => {\n        if (e.which === 13) {\n            sendMessage();\n        }\n    }\n\n    const Typing = (e) => {\n        setMessage(e);\n        socket.emit('TYPING', username);\n    }\n\n    const selectImage = () => {\n        sendImage.current.click();\n    }\n\n    const imageSelected = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        var file = event.target.files[0];\n\n        var formData = new FormData();\n        formData.append(\"file\", file)\n        formData.append(\"upload_preset\", \"chat_app\")\n        axios.post(\"https://api.cloudinary.com/v1_1/nikketan/image/upload\", formData).then(res => {\n            const msg = { \"to\": username, \"from\": currentUser, \"type\": \"image\", \"message\": res.data.secure_url, \"time\": new Date().toISOString() }\n            dispatch(addMessage(msg));\n            socket.emit('SEND_MESSAGE', msg);\n            setMessage('')\n        }).catch(err => {\n            console.log(err)\n        })\n\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar name={name} username={username} closeChat={closeChat} className={classes.titleBar} />\n            <div className={classes.toolbar} />\n\n\n\n            <ScrollToBottom className={classes.messageContainer}>\n\n                {messageList.map(message => {\n                    if (message.type === \"image\") {\n                        return (<Image sender={message.from} imageURL={message.message} time={message.time} key={message.message} />)\n                    } else {\n                        return (\n                            <Message sender={message.from} time={message.time} message={message.message} key={message.time} />\n                        );\n                    }\n                })}\n\n            </ScrollToBottom>\n\n            <div className={classes.sendMessageContainer}>\n                {/* <Button size=\"small\">\n                    <MoodRoundedIcon fontSize=\"large\" />\n                </Button> */}\n\n                <div className={classes.sendField}>\n                    <TextField\n                        fullWidth\n                        id=\"message-box\"\n                        label=\"Send a Message\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        value={message}\n                        onChange={ev => Typing(ev.target.value)} onKeyPress={checkKeyPress}\n                    />\n                </div>\n                <Button size=\"small\" onClick={selectImage}>\n                    <input\n                        type='file'\n                        id='file'\n                        accept=\"image/*\"\n                        ref={sendImage} style={{ display: 'none' }}\n                        onChange={(event) => imageSelected(event)}\n                    />\n                    <AttachmentIcon fontSize=\"large\" />\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.sendButton}\n                    onClick={sendMessage}\n                >\n                    <Icon fontSize=\"small\">send</Icon>\n                </Button>\n            </div>\n        </div>\n    );\n};\nexport default ChatWindow;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport axios from 'axios';\n\nimport { socket, socketAuth } from '../Socket';\nimport ChatList from \"./Components/ChatList\";\nimport ChatWindow from \"./Components/ChatWindow\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, addMessage, clearMessages } from '../actions';\nimport { Typography, Hidden } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        boxSizing: 'border-box',\n        [theme.breakpoints.down('xs')]: {\n            maxWidth: '100vw'\n        },\n        maxWidth: 'calc(100vw - 360px)',\n    },\n    NoChatSelected: {\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n}));\n\nconst NoChatSelected = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.NoChatSelected}>\n            <Typography className={classes.NoChatSelectedText} variant=\"h5\">Select a User from the List, or Search using Username to Chat.</Typography>\n\n        </div>\n    )\n}\n\nconst Chat = () => {\n    const [chatSelected, setChatSelected] = useState(\"\")\n    const [recents, setRecents] = useState([])\n\n    const [loggedIn, setIsLoggedIn] = useState(true);\n    const currentUser = localStorage.getItem('currentUser')\n\n    const token = localStorage.getItem('token')\n    const dispatch = useDispatch();\n    const messageStore = useSelector(state => state.messages.messages);\n\n    const classes = useStyles();\n\n    const selectChat = (user) => {\n        setChatSelected(user);\n    }\n    const closeChat = () => {\n        setChatSelected(\"\");\n    }\n\n    useEffect(() => {\n        socketAuth();\n        if (token !== null) {\n            axios.get('/api/user/account', { headers: { \"auth-token\": token } })\n                .then(res => {\n                    if (res.status === 200) {\n                        localStorage.setItem(\"currentUser\", res.data.username)\n                        setIsLoggedIn(true);\n                        dispatch(loginUser({ ...res.data, 'token': token }));\n                    }\n                }).catch((err) => {\n                    console.log(err)\n                    if (err.response) {\n                        console.log(err.response)\n                        setIsLoggedIn(false);\n                    }\n                });\n\n            axios.get('/api/chats/get', { headers: { \"auth-token\": token } }).then(res => {\n                if (res.status === 200) {\n                    // setMessages(res.data);\n                    var msg = res.data\n                    msg.map(msg => {\n                        if (messageStore.some(obj => obj.to === msg.to && obj.from === msg.from && obj.message === msg.message && obj.time === msg.time)) {\n                            console.log(\"Message already in msgstore\")\n                        } else {\n                            dispatch(addMessage(msg))\n                        }\n                    });\n\n                }\n            }).catch((err) => {\n                console.log(err)\n                if (err.response) {\n                    console.log(err.response);\n                }\n            });\n        } else {\n            setIsLoggedIn(false)\n        }\n\n        socket.on('RECEIVE_MESSAGE', data => {\n            dispatch(addMessage(data));\n        });\n\n    }, [token]);\n\n\n    useEffect(() => {\n        if (currentUser !== null) {\n            let userList = []\n            var tempMsg = messageStore.sort(function (a, b) { return new Date(a.time) - new Date(b.time) }).reverse();\n            tempMsg.forEach(msg => {\n                const user = msg.to === currentUser ? msg.from : msg.to\n                if (!(userList.find(el => el.user === user))) {\n                    userList.push({ user: user })\n                }\n            });\n            setRecents(userList);\n        }\n    }, [messageStore]);\n\n    return (\n        <div className={classes.root}>\n            {!loggedIn ? <Redirect to=\"/Home\" /> : null}\n            <CssBaseline />\n\n            {chatSelected !== \"\" ?\n                <Hidden xsDown>\n                    <ChatList recents={recents} selectChat={selectChat} className={classes.chatList} />\n                </Hidden>\n                :\n                <ChatList recents={recents} selectChat={selectChat} className={classes.chatList} />\n            }\n\n\n            <main className={classes.content}>\n\n                {chatSelected === '' ?\n                    <Hidden xsDown>\n                        <NoChatSelected />\n                    </Hidden>\n                    :\n                    <ChatWindow username={chatSelected} closeChat={closeChat} />}\n            </main>\n\n        </div>\n    )\n\n};\n\n\nexport default Chat;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport SignIn from './Home/Login'\nimport SignUp from './Home/SignUp'\nimport Home from './Home';\nimport Chat from './Chat';\n\n\nconst history = createBrowserHistory();\n\nconst store = createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nconst Main = () => {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/signup\" component={SignUp} />\n                    <Route path=\"/login\" component={SignIn} />\n                    <Route path=\"/Chat\" component={Chat} />\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </BrowserRouter>\n        </Provider>\n    )\n}\n\nReactDOM.render(\n    <Router history={history}>\n        <Main history={history} />\n    </Router>\n    ,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}